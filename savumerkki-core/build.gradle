buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.gorylenko.gradle-git-properties:gradle-git-properties:2.4.0"
    classpath 'de.undercouch:gradle-download-task:5.3.0'
  }
}

description = "java library to manage a system configuration in GitOps fashion"
group = rootProject.group
version = rootProject.version

ext {
	sourceCompatibility = 1.8
}

repositories {
	mavenCentral()
	jcenter()
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: "com.gorylenko.gradle-git-properties"
apply plugin: 'jacoco'
apply plugin: 'base'
apply plugin: 'distribution'
apply plugin: 'signing'
apply plugin: 'maven-publish'

dependencies {
  api group: 'org.json', name: 'json', version: '20220924'
  api 'org.yaml:snakeyaml:1.32'
  api 'dnsjava:dnsjava:3.5.1'
  api group: 'net.rossonet.commons', name: 'rossonet-helper', version: '0.3.1'
  implementation 'org.slf4j:slf4j-api:2.0.3'
  
  // Microsoft Azure vault
  // https://github.com/Azure/azure-sdk-for-java/tree/main/sdk/keyvault/azure-security-keyvault-secrets
  implementation 'com.azure:azure-security-keyvault-secrets:4.5.3'
  
  // Hashicorp Vault
  // https://bettercloud.github.io/vault-java-driver/
  implementation 'com.bettercloud:vault-java-driver:5.1.0'
  
  // Google Vault API
  // https://developers.google.com/vault/quickstart/java
  implementation 'com.google.api-client:google-api-client:2.0.0'
  implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
  implementation 'com.google.apis:google-api-services-vault:v1-rev20220423-2.0.0'

  // AWS S3
  // https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/examples-s3-objects.html
  implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
  implementation 'com.amazonaws:aws-java-sdk-s3'
  
  // git, GitLab, GitHub
  // https://wiki.eclipse.org/JGit/User_Guide
  // https://www.baeldung.com/jgit
  // https://www.codeaffine.com/2014/12/09/jgit-authentication/
  implementation 'org.eclipse.jgit:org.eclipse.jgit:6.3.0.202209071007-r'

  // Test Tools
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
  testImplementation group: 'com.ginsberg', name: 'junit5-system-exit', version: '1.1.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
  testImplementation 'org.slf4j:slf4j-simple:2.0.3'
}

task eclipseClosedDependencies {}

task eclipseClosedDependencies_ {}

eclipse {
	classpath {
	    downloadJavadoc = true
	    downloadSources = true
	}
}

task view { doLast { println "Working on project ${project.name} [ ${project.description} ]" } }

jar.doLast { task ->
	ant.checksum file: task.archivePath
}

java {
  withJavadocJar()
  withSourcesJar()
}

gitProperties {
	failOnNoGitDirectory = false
	customProperty 'component', "${project.name}"
	dateFormat = "yyyy-MM-dd HH:mm:ssZ"
	dateFormatTimeZone = 'GMT'
}

test {
  useJUnitPlatform()
}

javadoc{
	destinationDir = file("${project.buildDir}/docs/javadoc/${project.name}/")
	failOnError=false
}

task theiaIdeBackend(type: Exec) {
        workingDir "./"
        commandLine 'docker', 'run', '--init', '-p', '3000:3000', '-d', '-v', "${projectDir}:/home/project:cached", 'rossonet/theia-ide:latest'
}

task theiaIdeBackendNoCached(type: Exec) {
        workingDir "./"
        commandLine 'docker', 'run', '--init', '-p', '3000:3000', '-d', '-v', "${projectDir}:/home/project", 'rossonet/theia-ide:latest'
}

task theiaIdeBackendNoVolume(type: Exec) {
        workingDir "./"
        commandLine 'docker', 'run', '--init', '-p', '3000:3000', '-d', '--name', "docker-ide-${project.name}", 'rossonet/theia-ide:latest'
}

task theiaIdeBackendCopy(type: Exec) {
        theiaIdeBackendCopy.dependsOn("theiaIdeBackendNoVolume")
        workingDir "./"
        commandLine 'docker', 'cp', '.', "docker-ide-${project.name}:/home/project/"
}

task theiaIdeBackendStart(type: Exec) {
        description 'Run Theia IDE container with docker'
        theiaIdeBackendStart.dependsOn("theiaIdeBackendCopy")
        group "Theia IDE on Docker Container"
        workingDir "./"
        commandLine 'docker', 'exec', '-u', 'root', "docker-ide-${project.name}", '/bin/chown', '-R', 'theia:theia', '/home/project'
}

task printTheiaIdeBackendDockerCommand(type: Exec) {
        workingDir "./"
        commandLine 'echo', 'docker', 'run', '--init', '-p', '3000:3000', '-d', '--name', "docker-ide-${project.name}", 'rossonet/theia-ide:latest'
}

task theiaIdeLocalBrowser(type: Exec) {
        group "Theia IDE on Docker Container"
        description 'Open browser to local Theia IDE'
        workingDir "./"
        commandLine 'xdg-open', 'http://localhost:3000'
}

publishing {
  publications {
    mavenJava(MavenPublication){
      artifactId = "${project.name}"
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      pom {
        name = "${project.name}"
        description = "${project.description}"
        url = 'https://app.rossonet.net/'
        licenses {
          license {
            name = 'Apache-2.0 license'
            url = 'https://www.apache.org/licenses/LICENSE-2.0'
          }
        }
        developers {
          developer {
            id = 'ar4k'
            name = 'Andrea Ambrosini'
            email = 'andrea.ambrosini@rossonet.org'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/rossonet/Savumerkki.git'
          developerConnection = 'scm:git:ssh://github.com:rossonet/Savumerkki.git'
          url = 'https://github.com/rossonet/Savumerkki/tree/master'
        }
      }
    }
  }
  repositories {
    maven {
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      name = "sonatype"
      credentials {
        username "rossonet"
        password "${rootProject.ext.ossrhPassword}"
      }
    }
  }
}

signing {
    sign publishing.publications.mavenJava
}
